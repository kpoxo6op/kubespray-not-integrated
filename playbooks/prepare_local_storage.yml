---
# Ansible Playbook: prepare-local-storage.yml Description: This playbook
# automates the preparation of local storage directories for the Local Static
# Storage Provisioner in Kubernetes. It dynamically checks available disk space
# and ensures that the size of PVs complies with the actual available space.

- name: Common tasks for every playbook
  import_playbook: boilerplate.yml

- name: Prepare local storage for Local Static Provisioner
  hosts: all
  become: yes
  gather_facts: true
  vars:
    # List of volumes to create on each node
    local_volumes:
      - vol1
      - vol2
      - vol3
    # Base directory for local storage
    local_storage_base_dir: /mnt/disks
    # Define the percentage of disk space to use for storage (e.g., 80%)
    storage_usage_percentage: 80
  tasks:
    - name: Get available disk space on the node
      command: df --output=avail -BG "{{ local_storage_base_dir }}" | tail -n 1 | tr -d 'G'
      register: available_disk_space
      changed_when: false

    - name: Calculate usable disk space (based on {{ storage_usage_percentage }}% of available)
      set_fact:
        usable_disk_space: "{{ (available_disk_space.stdout | int) * storage_usage_percentage // 100 }}Gi"

    - name: Ensure usable disk space is logged
      debug:
        msg: "Usable disk space on node: {{ usable_disk_space }}"

    - name: Calculate space per volume
      set_fact:
        volume_size: "{{ (usable_disk_space | regex_replace('Gi', '') | int) // local_volumes | length }}Gi"

    - name: Log volume size
      debug:
        msg: "Each volume will be allocated {{ volume_size }} of space."

    - name: Create base directory for local storage
      file:
        path: "{{ local_storage_base_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create local volume directories
      loop: "{{ local_volumes }}"
      loop_control:
        loop_var: volume
      file:
        path: "{{ local_storage_base_dir }}/{{ volume }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Perform bind mount on local volume directories
      loop: "{{ local_volumes }}"
      loop_control:
        loop_var: volume
      shell: |
        mountpoint -q "{{ local_storage_base_dir }}/{{ volume }}" || \
        mount --bind "{{ local_storage_base_dir }}/{{ volume }}" "{{ local_storage_base_dir }}/{{ volume }}"
      args:
        executable: /bin/bash

    - name: Ensure bind mount is persistent in /etc/fstab
      lineinfile:
        path: /etc/fstab
        line: "{{ local_storage_base_dir }}/{{ volume }} {{ local_storage_base_dir }}/{{ volume }} none bind 0 0"
        state: present
        create: yes
      loop: "{{ local_volumes }}"
      loop_control:
        loop_var: volume

    - name: Verify that mounts are active
      shell: mountpoint -q "{{ local_storage_base_dir }}/{{ volume }}"
      args:
        executable: /bin/bash
      loop: "{{ local_volumes }}"
      loop_control:
        loop_var: volume
      register: mount_check
      failed_when: mount_check.rc != 0
      changed_when: false

    - name: Set SELinux context (if SELinux is enabled)
      when: ansible_selinux.status == "enabled"
      loop: "{{ local_volumes }}"
      loop_control:
        loop_var: volume
      command: "chcon -Rt svirt_sandbox_file_t {{ local_storage_base_dir }}/{{ volume }}"
